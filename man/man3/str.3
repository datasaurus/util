.\" 
.\" Copyright (c) 2008 Gordon D. Carrie
.\" All rights reserved
.\" 
.\" Please address questions and feedback to dev0@trekix.net
.\" 
.\" $Revision: 1.11 $ $Date: 2009/12/31 01:00:32 $
.\"
.TH str 3 "String manipulation functions"
.SH NAME
Str_Esc, Str_Words \- manipulate strings
.SH SYNOPSIS
.nf
\fB#include "str.h"\fP
\fBchar *Str_Esc(char *\fP\fIs\fP\fB);\fP
\fBchar\fP ** \fBStr_Words\fP(\fBchar\fP *\fIln\fP, \fBint\fP *\fIargc\fP);
\fBchar\fP * \fBStr_Append\fP(\fBchar\fP *\fIdest\fP, \fBsize_t\fP *\fIl\fP, \fBsize_t\fP *\fIlx\fP, \fBchar\fP *\fIsrc\fP, \fBsize_t\fP \fIn\fP);
\fBchar\fP * \fBStr_GetLn\fP(\fBFILE\fP *\fIin\fP, \fBchar\fP \fIeol\fP, \fBchar\fP *\fIln\fP, \fBint\fP *\fIl_max\fP);
.fi
.SH DESCRIPTION
\fBStr_Esc\fP replaces escape sequences in \fIs\fP with their corresponding ASCII
characters.
The following escape sequences are recognized.
.ta 8m
.br
\fB\\a\fP	becomes a single <bell> character.
.br
\fB\\b\fP	becomes a single <backspace> character.
.br
\fB\\f\fP	becomes a single <form-feed> character.
.br
\fB\\n\fP	becomes a single <new-line> character.
.br
\fB\\r\fP	becomes a single <carriage return> character.
.br
\fB\\t\fP	becomes a single <tab> character.
.br
\fB\\v\fP	becomes a single <vertical tab> character.
.br
\fB\\'\fP	becomes a single <single quote> character.
.br
\fB\\\\ \fP	becomes a single backslash character.
.br
.in +8m
.ti -8m
\fB\\0\fP\fInum\fP	becomes the character whose ASCII value is \fInum\fP, where \fInum\fP is an integer given as 1, 2, or 3 octal digits.
.in -8m
The (possibly modified) string is returned.

\fBStr_Words\fP splits string \fIln\fP into words.
A word is a contiguous sequence of non-whitespace characters, or a contiguous
sequence of any characters bounded by a pair of matching quotes (\fB"\fP or
\fB'\fP).
Return value is an array of strings, followed by a \fBNULL\fP, followed by the
string contents.  Each element of the array of strings points to the start of
a word in the contents segment.  The number of words found is placed at \fIargc\fP.
The return value should eventually be passed to \fBFREE\fP.  This will free
memory for both the array of strings and their contents.
If something goes wrong, \fBStr_Words\fP returns \fBNULL\fP and sets
*\fIargc\fP\ =\ \fB-1\fP.
Calling \fBErr_Get\fP will retrieve an error message.

\fBStr_Append\fP copies \fIn\fP characters from \fIsrc\fP to \fIdest\ +\ *l\fP and
appends a \fBnul\fP.  At entry, \fIdest\fP should point to storage for *\fIlx\fP
characters allocated by \fBMALLOC\fP, \fBCALLOC\fP, or \fBREALLOC\fP.  If space is
insufficient, it adjusts the allocation with \fBREALLOC\fP and updates \fIlx\fP.
To avoid excessive allocation adjustments, it usually allocates extra space at
\fIdest\fP.
Return value is \fIdest\fP or a new allocation.  Upon return, *\fIl\fP indicates
the number of characters at \fIdest\fP, excluding the terminating \fBnul\fP.  If
something goes wrong, \fBStr_Append\fP returns \fBNULL\fP.  Calling \fBErr_Get\fP
will retrieve an error message.

\fBStr_GetLn\fP reads characters from input stream \fIin\fP until it encounters
end of line character \fIeol\fP.  The resulting string is returned, with a
\fBnul\fP terminator instead of the end of line character, and the allocation size,
including the terminating \fBnul\fP, is stored at \fIl_max\fP.
If, upon entry, \fIln\fP is \fBNULL\fP, the string will be returned in a new
allocation.  The memory should eventually be freed with a call to \fBFREE\fP.
If \fIln\fP is not \fBNULL\fP, it is assumed to point to storage for
*\fIl_max\fP\ +\ \fB1\fP characters, allocated with \fBMALLOC\fP, \fBCALLOC\fP,
or \fBREALLOC\fP.  \fBStr_GetLn\fP will store characters at the given memory,
clobbering any previous contents.  If it encounters more than
*\fIl_max\fP\ -\ \fB1\fP characters, it will increase the allocation with
\fBREALLOC\fP and update *\fIl_max\fP.
If something goes wrong, \fBStr_GetLn\fP returns \fBNULL\fP, and leaves an
error message that \fBErr_Get\fP can retrieve.  If a non-\fBNULL\fP \fIln\fP
was given, it may have been modified.
.SH SEE ALSO
alloc (3), err_msg (3)
.SH AUTHOR
Gordon Carrie (dev0@trekix.net)
